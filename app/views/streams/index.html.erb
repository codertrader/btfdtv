<style>
body {background-color: black;}

.nav-pills a {
  color: white;
}

.nav-pills a:hover {
  color: #402B5C;
}
/*
.nav-pills > .active > a, .nav-pills > .active > a:hover, .nav-pills > .active > a:focus {
    background-color: #51a351;
    color: white;
    font-weight: bold;
}
*/
</style>

<style>
.center {
   margin: 0 auto !important;
   float: none !important;
}
</style>

<div class="span12 pull-center">

  <ul class="nav nav-pills" style="width:100%; margin-bottom:0.5em;" id="myTab" >
    <li class="active"><a href="#live" data-toggle="pill" id="live-link"><%=glyph(:microphone)%> LIVE</a></li>
    <li><a href="#archive" data-toggle="pill" id="archive-link"><%=glyph(:briefcase) %> Archive</a></li>
    <% if params[:direct] %>
      <li><a href="#direct" data-toggle="pill" id="direct-link"><%=glyph(:bookmark) %> Direct</a></li>
    <% end %>
  </ul>

<div class="tab-content">
  <div class="tab-pane active" id="live" style="overflow:hidden;">
    <div id="live-youtube" class="span12" style="margin:auto; max-width: 720px; width:100%; height:400px; max-height:400px; overflow:hidden;">
    </div> 
  </div>
  
  <div class="tab-pane" id="archive">
    <div id="youtube-tv-frame"><p class="text-info"><strong>Loading Archive...</strong></p></div>
  </div>


  <div class="tab-pane" id="direct" style="overflow:hidden;">
    <div id="direct-youtube" class="span12" style="margin:auto; max-width: 720px; width:100%; height:400px; max-height:400px; overflow:hidden;">
    </div> 
  </div>
</div>

</div>

<script type="text/javascript">

     var API_KEY = 'AIzaSyCRV03KpFosQojWCk0py-lcYTzrvrguiWE';

googleApiClientReady = function() {
  gapi.auth.init(function() {
    window.setTimeout(checkAuth, 1);
  });
}

function checkAuth() {
  loadAPIClientInterfaces();
}

function loadAPIClientInterfaces() {
  gapi.client.load('youtube', 'v3', function() {
    handleAPILoaded();
  });
}

// Once the api loads call a function to get the uploads playlist id.
function handleAPILoaded() {
  gapi.client.setApiKey(API_KEY);
  windowReady();
}

windowReady = function() {
     $(document).ready( function() {

  		$(function () {
    		  $('#myTab a:first').tab('show')
  		});

		$('#myTab a').click(function (e) {
  		  e.preventDefault();
  		  $(this).tab('show');
 		});

		$('#archive-link').click( function() {	

				$('#youtube-tv-frame').ytv({
                                  user: '<%= Stream.first.name %>',
                                  accent: '#d51c18',
                                  autoplay: false,
                                  chainVideos: 1,
                                });

                	});

                    var recentVideo = {
                        title: 'OFF AIR',
                        id: '',
                        thumbnails: ''
                    };

    		$('#live-youtube').youTubeLiveEvent({user:'<%= Stream.first.name %>', 
					             autoplay: <%= params[:direct].nil? %>, 
						     loaded: function(videos,allopts) { 
							  if( videos.length==0 ) { 
							  	var alternateLink = '<%=params[:direct].nil? ? '#archive-link' : '#direct-link'%>'; 	
								$(alternateLink).trigger('click'); 
								$("#live-link").css('background-color','#CD332D');
								$("#live-link").html('<%=glyph(:microphone)%> OFF AIR');
							  } else { 
								recentVideo = videos[0];
								$("#live-link").css('background-color','#51a351'); 
								$("#live-link").html('<%=glyph(:microphone)%> LIVE');
							  }
	        					  setTimeout(updateLiveEvent, 10000);
							},
						     playopts: {vq:'hd720'} 
						    });

	        <% if params[:direct] %>		
    		$('#direct-youtube').youTubeDirect({user:'<%= Stream.first.name %>', 
					             autoplay: <%= not params[:direct].nil? %>, 
						     loaded: function(videos,allopts) { 
							},
						     playopts: {vq:'hd720'} 
						    });
		<% end %>

		function updateLiveEvent() {

 		var url = "http://gdata.youtube.com/feeds/api/users/" + '<%= Stream.first.name %>' + "/live/events?v=2&inline=true&alt=json&status=active";

		$.getJSON(url, function(data) {
                var feed = data.feed;
                var entries = feed.entry || [];
                var videos = [];

                   for( var i = 0; i < entries.length; i++ ) {
                    var entry = entries[i];
                        var href = entry.link[1].href;
                        var slug= href.substr( href.indexOf('videos/') + 7 );
                        slug = slug.substr( 0, slug.length - 4 );

                    var video = {
                        title: entry.title.$t,
                        id: slug,
                        thumbnails: entry.media$group.media$thumbnail
                    };

                    if( video.title.indexOf('test') > -1 || video.title.indexOf('Test') > -1 || video.title == 'BTFDtv' || video.title.indexOf('Dark') > -1 ) {
                      // filter these test shows out
                    } else {
                      videos.push(video);
                    }
                }

 if( videos[0] && videos[0].id != recentVideo.id ) { location.reload(); } 
 else if( videos.length==0 ) {
          $("#live-link").css('background-color','#CD332D');
          $("#live-link").html('<%=glyph(:microphone)%> OFF AIR');
      }


	     });

  			setTimeout(updateLiveEvent, 10000);
		}
	        
	});
}
</script>

<script src="http://apis.google.com/js/client.js?onload=googleApiClientReady"></script>

<style type="text/css">
<!--

#player {
    width: 100%;
    max-width: 720px;
    height: 400px;
    overflow: hidden;
    background: white;
    position: absolute;
    //border: solid 0px gray;
    border: none;
}

.youtube .xcarousel {
    width: 20%;
    height: 100%;
    overflow: auto;
    position: absolute;
    right: 0px;
// z-index: 3;
}

.youtube .thumbnail {
    margin: 2px;
    width: 80%;
    border: 1px solid black;
}

.youtube iframe.player {
    width: 100%;
    height: 100%;
    overflow: hidden;//auto
    border: none !important;
}

-->
</style>

<script type="text/javascript">
(function() {
    function createPlayer(jqe, video, options) {
        var ifr = $('iframe', jqe);
        if (ifr.length === 0) {
            ifr = $('<iframe scrolling="no">');
            ifr.addClass('player');
	    ifr.css('border','none');
        }

     var src = '';

     if( video ) {
        src = 'http://www.youtube.com/embed/' + video.id;
        if (options.playopts) {
            src += '?';
            for (var k in options.playopts) {
                src+= k + '=' + options.playopts[k] + '&';
            }
            src += '_a=b';
        }
        ifr.attr('src', src);
     } else {
        //ifr.attr('src','assets/noliveshow.jpg'); // Image Source is techinasia 
        //ifr.attr('src','assets/offair.jpg'); // Image Source is techinasia 
        ifr.attr('src',''); // Image Source is techinasia 
     }
        jqe.append(ifr);
    }
    
    function createCarousel(jqe, videos, options) {
        var car = $('div.xcarousel', jqe);
        if (car.length === 0) {
            car = $('<div>');
            car.addClass('xcarousel');
            jqe.append(car);
            
        }
        $.each(videos, function(i,video) {
            options.thumbnail(car, video, options);
        });
    }
    
    function createThumbnail(jqe, video, options) {
        var imgurl = video.thumbnails[0].url;
        var img = $('img[src="' + imgurl + '"]');
        if (img.length !== 0) return;
        img = $('<img>');
        img.addClass('thumbnail');
        jqe.append(img);
        img.attr('src', imgurl);
        img.attr('title', video.title);
        img.click(function() {
            options.player(options.maindiv, video, $.extend(true,{},options,{playopts:{autoplay:1}}));
        });
    }
    
    var defoptions = {
        autoplay: true,
        user: null,
        carousel: function(){}, //createCarousel,
        player: createPlayer,
        thumbnail: createThumbnail,
        loaded: function() {},
        playopts: {
            autoplay: 1,
            egm: 1,
            autohide: 1,
            fs: 1,
            showinfo: 0
        }
    };
    
 $.fn.extend({
        youTubeLiveEvent: function(options) {
            var md = $(this);
            md.addClass('youtube');
            md.addClass('youtube-channel');
            var allopts = $.extend(true, {}, defoptions, options);
            allopts.maindiv = md;

            var url = "http://gdata.youtube.com/feeds/api/users/" + allopts.user + "/live/events?v=2&inline=true&alt=json&status=active";

            $.getJSON(url, function(data) {
                var feed = data.feed;
                var entries = feed.entry || [];
                var videos = [];

               // $.each(entries, function(i, entry) {
		   for( var i = 0; i < entries.length; i++ ) {
                    var entry = entries[i];

			 var href = entry.link[1].href;
            		var slug= href.substr( href.indexOf('videos/') + 7 );
                        slug = slug.substr( 0, slug.length - 4 ); 

                    var video = {
                        title: entry.title.$t,
                        id: slug,
                        thumbnails: entry.media$group.media$thumbnail
                    };

                    if( video.title.indexOf('test') > -1 || video.title.indexOf('Test') > -1 || video.title == 'BTFDtv' || video.title.indexOf('Dark') > -1 ) {
                      // filter these test shows out
                    } else {
                      videos.push(video);
                    }
                //});
	        }

                allopts.allvideos = videos;
                allopts.carousel(md, videos, allopts);
                allopts.player(md, videos[0], allopts);
                allopts.loaded(videos, allopts);
            });
        }
    });

 $.fn.extend({
        youTubeDirect: function(options) {
            var md = $(this);
            md.addClass('youtube');
            md.addClass('youtube-channel');
            var allopts = $.extend(true, {}, defoptions, options);
            allopts.maindiv = md;

                var videos = [];

                    var video = {
                    //    title: entry.title.$t,
                        id: '<%=params[:direct]%>',
                    //    thumbnails: entry.media$group.media$thumbnail
                    };

                    videos.push(video);

                allopts.allvideos = videos;
                allopts.carousel(md, videos, allopts);
                allopts.player(md, videos[0], allopts);
                allopts.loaded(videos, allopts);
        }
    });

 
    $.fn.extend({
        youTubeChannel: function(options) {
            var md = $(this);
            md.addClass('youtube');
            md.addClass('youtube-channel');
            var allopts = $.extend(true, {}, defoptions, options);
            allopts.maindiv = md;
            $.getJSON('http://gdata.youtube.com/feeds/users/' + allopts.user + '/uploads?alt=json-in-script&format=5&callback=?', null, function(data) {
                var feed = data.feed;
                var videos = [];
                $.each(feed.entry, function(i, entry) {
                    var video = {
                        title: entry.title.$t,
                        id: entry.id.$t.match('[^/]*$'),
                        thumbnails: entry.media$group.media$thumbnail
                    };

		    if( video.title.indexOf('test') > -1 || video.title.indexOf('Test') > -1 || video.title == 'BTFDtv' || video.title.indexOf('Dark') > -1 ) {
                      // filter these test shows out
		    } else { 
                      videos.push(video);
		    }
                });
                allopts.allvideos = videos;
                allopts.carousel(md, videos, allopts);
                allopts.player(md, videos[0], allopts);
                allopts.loaded(videos, allopts);
            });
        }
    });
    
})();
        
</script>
